import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Logger;

import net.java.otr4j.OtrEngineHost;
import net.java.otr4j.OtrPolicy;
import net.java.otr4j.OtrEngineImpl;
import net.java.otr4j.OtrPolicyImpl;
import net.java.otr4j.session.SessionID;
import net.java.otr4j.session.SessionStatus;

public class Encryptor {

	private SessionID aliceSessionID = new SessionID("Alice@Wonderland",
            "Bob@Wonderland", "Scytale");

	private SessionID bobSessionID = new SessionID("Bob@Wonderland",
            "Alice@Wonderland", "Scytale");

	private OtrPolicy policy;

	private static Logger logger = Logger.getLogger(Encryptor.class.getName());
	
	class DummyOtrEngineHost implements OtrEngineHost {
        public DummyOtrEngineHost(OtrPolicy policy) {
                this.policy = policy;
        }

        private OtrPolicy policy;
        public String lastInjectedMessage;

        public OtrPolicy getSessionPolicy(SessionID ctx) {
                return this.policy;
        }

        public void injectMessage(SessionID sessionID, String msg) {
                this.lastInjectedMessage = msg;
                String msgDisplay = (msg.length() > 10) ? msg.substring(0, 10)
                                + "..." : msg;
                logger.finest("IM injects message: " + msgDisplay);
        }

        public void showError(SessionID sessionID, String error) {
                logger.severe("IM shows error to user: " + error);
        }

        public void showWarning(SessionID sessionID, String warning) {
                logger.warning("IM shows warning to user: " + warning);
        }

        public void sessionStatusChanged(SessionID sessionID) {
                // don't care.
        }

        public KeyPair getKeyPair(SessionID paramSessionID) {
                KeyPairGenerator kg;
                try {
                        kg = KeyPairGenerator.getInstance("DSA");

                } catch (NoSuchAlgorithmException e) {
                        e.printStackTrace();
                        return null;
                }

                return kg.genKeyPair();
        }
	}

	private DummyOtrEngineHost host;
	public static void main(String[] args){
		//Start session
		host = new DummyOtrEngineHost(new OtrPolicyImpl(OtrPolicy.ALLOW_V2 | OtrPolicy.ERROR_START_AKE));
		
		//Swap messages
		//Decrypt messages
		//End session

	}
}
